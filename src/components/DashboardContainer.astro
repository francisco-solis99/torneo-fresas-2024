---
import { PencilLine, Users, ArrowBigRightDash } from "lucide-react";
import { Toaster } from "sonner";
import { Button } from "@/components/ui/button";
import { Menu, X } from "lucide-react";

const session = Astro.locals.session;
if (!session) {
  return Astro.redirect("/login");
}

const sessionId = session.id;

const menuDashboard = [
  {
    name: "Registro",
    href: "/dashboard/registro",
    icon: PencilLine,
  },
  {
    name: "Parejas",
    href: "/dashboard/parejas",
    icon: Users,
  },
  {
    name: "Fase 1",
    href: "/dashboard/fase1",
    icon: ArrowBigRightDash,
  },
  {
    name: "Fase 2",
    href: "/dashboard/fase2",
    icon: ArrowBigRightDash,
  },
  {
    name: "Fase 3",
    href: "#",
    icon: ArrowBigRightDash,
  },
];
---

<>
  <div class="relative min-h-screen grid sm:grid-cols-[_0.15fr_1fr]">
    <Button
      className="relative z-20 my-5 mx-8 md:mx-12 lg:mx-20 sm:hidden"
      variant={"secondary"}
      size={"icon"}
      id="btn-dashbord-menu"
    >
      <Menu />
      <X className="hidden" />
    </Button>
    <aside
      id="aside-nav"
      class="fixed -translate-x-full sm:translate-x-0 transition-transform z-10 sm:sticky top-0 py-4 px-10 flex items-center bg-card border-r border-stone-700 h-screen backdrop-blur-md"
    >
      <nav>
        <ul class="grid gap-y-5">
          {
            menuDashboard.map((item) => {
              const { href, name, icon: Icon } = item;
              return (
                <li class="inline-flex items-center gap-x-1.5">
                  <span>
                    <Icon className="w-5 aspect-square" />
                  </span>
                  <a href={href}>{name}</a>
                </li>
              );
            })
          }
        </ul>
        <form id="form-sign-out">
          <Button
            type="submit"
            size={"sm"}
            variant={"outline"}
            className="absolute bottom-10 hover:bg-primary"
            >Cerrar sesi√≥n</Button
          >
        </form>
      </nav>
    </aside>
    <main class="max-w-8xl mx-auto w-full py-5 px-8 md:px-12 lg:px-20">
      <slot />
    </main>
    <Toaster client:load />
  </div>
</>

<script is:inline define:vars={{ sessionId }}>
  if (!sessionId || window.localStorage.getItem("TF2024")) {
    return;
  }
  window.localStorage.setItem("TF2024", sessionId);
</script>

<script>
  // logout
  const logOutForm = document.getElementById("form-sign-out");
  logOutForm?.addEventListener("submit", async (e) => {
    e.preventDefault();
    await fetch("/api/logout", {
      method: "POST",
    });
    window.localStorage.removeItem("TF2024");
    window.location.href = "/login";
  });

  // open/close menu
  const btnDashboardMenu = document.getElementById(
    "btn-dashbord-menu"
  ) as HTMLButtonElement;
  const asideNav = document.getElementById("aside-nav") as HTMLElement;

  btnDashboardMenu.addEventListener("click", () => {
    asideNav.classList.toggle("-translate-x-full");
    [...btnDashboardMenu.children].forEach((el) => {
      el.classList.toggle("hidden");
    });
  });
</script>
