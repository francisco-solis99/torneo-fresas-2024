---
interface Props {
  player1Duo1: string;
  player2Duo1: string;
  player1Duo2: string;
  player2Duo2: string;
  pointsDuo1: number;
  pointsDuo2: number;
}

const {
  player1Duo1,
  player2Duo1,
  player1Duo2,
  player2Duo2,
  pointsDuo1,
  pointsDuo2,
} = Astro.props;
---

<article
  class="relative w-full flex flex-col items-center bg-gradient-to-b from-black bg-stone-800 border rounded-sm"
>
  <div
    class="absolute inset-0 h-full w-full bg-[radial-gradient(#ffffff35_1px,transparent_1px)] [background-size:14px_14px]"
  >
  </div>
  <!-- Duos -->
  <div
    class={`h-full items-center py-3 px-4 grid grid-cols-[1fr_auto] gap-x-5 border w-full ${pointsDuo1 > pointsDuo2 ? "bg-green-500/10" : ""}`}
  >
    <div class="flex items-center">
      <p class="text-sm lg:text-base">{player1Duo1}</p>
      <span class="mx-1">/</span>
      <p class="text-sm lg:text-base">{player2Duo1}</p>
    </div>
    <span class="inline-block text-lg ml-2 justify-self-end">{pointsDuo1}</span>
  </div>
  <span
    class="absolute top-1/2 -translate-y-1/2 z-10 backdrop-blur-sm font-audioWide text-md sm:text-lg -skew-y-3 inline-block"
    >VS</span
  >
  <div
    class={`h-full items-center py-3 px-4 grid grid-cols-[1fr_auto] gap-x-5 border w-full ${pointsDuo2 > pointsDuo1 ? "bg-green-500/10" : ""}`}
  >
    <div class="flex items-center">
      <p class="text-sm lg:text-base">{player1Duo2}</p>
      <span class="mx-1">/</span>
      <p class="text-sm lg:text-base">{player2Duo2}</p>
    </div>
    <span class="inline-block text-lg ml-2 justify-self-end">{pointsDuo2}</span>
  </div>
</article>
