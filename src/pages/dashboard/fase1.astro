---
// export const prerender = true;
const user = Astro.locals.user;
if (!user) {
  return Astro.redirect("/login");
}

import { db } from "@/lib/db";
import DashboadLayout from "@/layouts/DashboardLayout.astro";
import DashboardContainer from "@/components/DashboardContainer.astro";
import MatchesList from "@/components/MatchesList";

const { rows: matchesByPhase } = await db.execute({
  sql: `
      SELECT m.id AS match_id, g.name AS group_name,
      d1.id AS duo1_id,
      d1.player1 AS player1_duo1,
      d1.player2 AS player2_duo1,
      d2.id AS duo2_id,
      d2.player1 AS player1_duo2,
      d2.player2 AS player2_duo2,
      m.points_d1,
      m.points_d2,
      p.name AS phase_name,
      p.id AS phase_id
      FROM matches m
      INNER JOIN duos d1 ON m.duo1_id = d1.id
      INNER JOIN duos d2 ON m.duo2_id = d2.id
      INNER JOIN groups g ON d1.group_id = g.id
      INNER JOIN phases p ON m.phase_id = p.id
      WHERE p.name = ?;`,
  args: ["Fase 1"],
});

// console.log(matchesByPhase);
---

<DashboadLayout
  title="Dashboard - Parejas"
  description="Parejas para el Torneo de las Fresas"
>
  <DashboardContainer>
    <div class="h-full flex flex-col justify-center">
      <h1 class="mb-4 text-xl sm:text-2xl md:text-4xl font-audioWide font-bold">
        Fase 1
      </h1>
      <!-- <div
        class="mt-5 grid sm:grid-cols-2 lg:grid-cols-3 gap-x-8 md:gap-x-12 gap-y-12"
      >
        {
          matchesByPhase.map((match: any) => {
            return (
              <div>
                <Match
                  matchId={match.match_id}
                  duo1Id={match.duo1_id}
                  duo2Id={match.duo2_id}
                  phaseId={match.phase_id}
                  player1Duo1={match.player1_duo1}
                  player2Duo1={match.player2_duo1}
                  player1Duo2={match.player1_duo2}
                  player2Duo2={match.player2_duo2}
                  pointsDuo1={match.points_d1}
                  pointsDuo2={match.points_d2}
                  isEditable={user ? true : false}
                />
                <span
                  class={`text-sm sm:text-base px-4 inline-block border border-gray-500 ${groupsColors[match.group_name]}`}
                >
                  {match.group_name}
                </span>
              </div>
            );
          })
        }
      </div> -->

      {
        matchesByPhase.length > 0 && (
          <MatchesList
            client:load
            matchesList={matchesByPhase}
            isEditable={user ? true : false}
          />
        )
      }
    </div>
  </DashboardContainer>
</DashboadLayout>
