---
// export const prerender = true;
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/Container.astro";
import Match from "@/components/Match.astro";
import { db } from "@/lib/db";
import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableFooter,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";

export function getStaticPaths() {
  return [
    { params: { group: "A" } },
    { params: { group: "B" } },
    { params: { group: "C" } },
    { params: { group: "D" } },
    { params: { group: "E" } },
    { params: { group: "F" } },
  ];
}

const groupsColors: Record<string, string> = {
  A: "bg-red-950/90",
  B: "bg-yellow-950/90",
  C: "bg-emerald-950/90",
  D: "bg-cyan-950/90",
  E: "bg-rose-950/90",
  F: "bg-amber-950/90",
  G: "bg-teal-950/90",
  H: "bg-violet-950/90",
};

const { group } = Astro.params;

const { rows: matchesByGroup } = await db.execute({
  sql: `
      SELECT m.id AS match_id, g.name AS group_name,
      d1.player1 AS player1_duo1,
      d1.player2 AS player2_duo1,
      d2.player1 AS player1_duo2,
      d2.player2 AS player2_duo2,
      m.points_d1,
      m.points_d2,
      p.name AS phase_name
      FROM matches m
      INNER JOIN duos d1 ON m.duo1_id = d1.id
      INNER JOIN duos d2 ON m.duo2_id = d2.id
      INNER JOIN groups g ON d1.group_id = g.id
      INNER JOIN phases p ON m.phase_id = p.id
      WHERE g.name = ? AND p.name = ?;`,
  args: [group, "Fase 1"],
});

const { rows: statsByDuo } = await db.execute({
  sql: `
      SELECT g.name AS group_name, d.id AS duo_id, d.player1, d.player2,
        SUM(CASE WHEN w.duo_id = d.id THEN 1 ELSE 0 END) AS wins,
        SUM(CASE WHEN m.duo1_id = d.id THEN m.points_d1 ELSE
              CASE WHEN m.duo2_id = d.id THEN m.points_d2 ELSE 0 END
        END) AS total_points
      FROM groups g
      INNER JOIN duos d ON g.id = d.group_id
      INNER JOIN matches m ON d.id IN (m.duo1_id, m.duo2_id)
      LEFT JOIN winners w ON m.id = w.match_id
      WHERE m.phase_id = 1 AND g.name = ?
      GROUP BY g.name, d.id, d.player1, d.player2
      ORDER BY g.name, wins DESC;
    `,
  args: [group],
});
// console.log(statsByDuo);
---

<Layout title="Torneo de las Fresas 2024" description="Torneo de las Fresas">
  <div>
    <header
      class="grid-pattern-background relative py-12"
      style="--_num-lines: 5vmin; --_heigh-pattern: 40vh;"
    >
      <div
        class={`absolute left-1/2 top-1/2 h-80 w-full -translate-x-1/2 -translate-y-3/4 rounded-full opacity-70 blur-[60px] ${groupsColors[group]} -z-10`}
      >
      </div>
      <h1
        class="-skew-y-6 font-audioWide px-5 text-5xl md:text-6xl text-center"
        transition:name=`group-name-${group}`
      >
        Grupo <br />
        <span class="inline-flex mt-1.5 text-7xl md:text-8xl">{group}</span>
      </h1>
    </header>
  </div>
  <Container class:list={["max-w-7xl"]}>
    <main class="px-3 sm:px-7 mt:px-10 mt-14 mb-32 lg:mt-20 lg:mb-40">
      <section
        class="grid sm:grid-cols-2 lg:grid-cols-3 gap-x-8 md:gap-x-12 gap-y-12"
      >
        {
          matchesByGroup.map((match: any) => {
            return (
              <Match
                player1Duo1={match.player1_duo1}
                player2Duo1={match.player2_duo1}
                player1Duo2={match.player1_duo2}
                player2Duo2={match.player2_duo2}
                pointsDuo1={match.points_d1}
                pointsDuo2={match.points_d2}
              />
            );
          })
        }
      </section>
      <section class="mt-20">
        <h2 class="text-3xl text-center font-bold mb-4">Tabla de Matches</h2>
        <Table className="overflow-x-auto">
          <TableCaption>Lista de matches</TableCaption>
          <TableHeader>
            <TableRow>
              <TableHead
                className="text-center xs:text-left text-sm xs:text-base"
                >Pareja</TableHead
              >
              <TableHead
                className="text-center xs:text-left text-sm xs:text-base"
                >Victorias</TableHead
              >
              <TableHead
                className="text-center xs:text-left text-sm xs:text-base"
                >Puntos Totales</TableHead
              >
            </TableRow>
          </TableHeader>

          <TableBody>
            {
              statsByDuo.map((statDuo: any) => (
                <TableRow>
                  <TableCell>
                    {statDuo.player1} / {statDuo.player2}
                  </TableCell>
                  <TableCell>{statDuo.wins}</TableCell>
                  <TableCell>{statDuo.total_points}</TableCell>
                </TableRow>
              ))
            }
          </TableBody>

          <TableFooter>
            <TableRow>
              <TableCell colSpan={2}>Total Parejas</TableCell>
              <TableCell>3</TableCell>
            </TableRow>
          </TableFooter>
        </Table>
      </section>
    </main>
  </Container>
</Layout>
